// <auto-generated />
using System;
using AFwalks.API_7.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AFwalks.API_7.Migrations
{
    [DbContext(typeof(AFwalks7DbContext))]
    [Migration("20230703122646_Seeding data fr Difficultis an Regions")]
    partial class SeedingdatafrDifficultisanRegions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AFwalks.API_7.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6cbc474b-546a-462f-80ae-62b15a08210c"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("21663eb5-77eb-485d-8f42-63ae94c43cb9"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("20b3c9c4-366c-4572-bba0-e0702125fefd"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("AFwalks.API_7.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4c5d0b8-2a2f-48de-9623-9d808a8bd9cf"),
                            Code = "NGA",
                            Name = "Chuks Region",
                            RegionImageUrl = "https://wallpapercave.com/w/d8zqgVd"
                        },
                        new
                        {
                            Id = new Guid("5f354405-b144-47ba-abaf-f160b2861de6"),
                            Code = "CND",
                            Name = "Sagemode",
                            RegionImageUrl = "https://wallpapercave.com/w/d8zqgVd"
                        },
                        new
                        {
                            Id = new Guid("d267bd9e-8cda-4cac-8188-e3872c7cf877"),
                            Code = "SGA",
                            Name = "Boss Nation"
                        },
                        new
                        {
                            Id = new Guid("7a19d5d5-cd6b-4cf5-be96-d193043b4e5a"),
                            Code = "KEN",
                            Name = "Naruto"
                        },
                        new
                        {
                            Id = new Guid("3c41788e-abfd-44e1-9750-32f27f64fd3a"),
                            Code = "STL",
                            Name = "Southland"
                        });
                });

            modelBuilder.Entity("AFwalks.API_7.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("AFwalks.API_7.Models.Domain.Walk", b =>
                {
                    b.HasOne("AFwalks.API_7.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AFwalks.API_7.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
